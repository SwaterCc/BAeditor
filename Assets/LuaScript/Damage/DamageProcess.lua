---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by shirui.
--- DateTime: 2024/8/27 下午2:14
---xlua

local DamageProcess = {}

--计算暴击
DamageProcess.CriticalProcess = function(attacker, target, damageInfo)
    return isCrit,value
end

DamageProcess.DamageProcessMain = function(attacker, target, damageInfo)
    local damageConfig = CS.ConfigManager.Instance.Get("DamageConfig").GetRow(damageInfo.DamageConfigId)

    local additiveFinal = 1;
    for i, v in pairs(damageConfig.additives) do
        local addiParam = damageConfig.addiParam[i]
        additiveFinal = additiveFinal * DamageAdditionalFunc[tonumber(v)](attacker, target, damageInfo, addiParam)
    end

    local multiplyFinal = 1;
    for i, v in pairs(damageConfig.multiply) do
        local multiParam = damageConfig.multiParam[i]
        multiplyFinal = multiplyFinal * DamageMultiplierFunc[tonumber(v)](attacker, target, damageInfo, multiParam)
    end

    local IsCritical, CriticalValue = DamageProcess.CriticalProcess(attacker, target, damageInfo)

    multiplyFinal = multiplyFinal * CriticalValue

    local damageArgs = {
        FinalAtk = attacker:GetAttr(EAttack),
        FinalAddi = additiveFinal,
        FinalMulti = multiplyFinal
    }

    --计算最终伤害
    local finalDamageValue = func[damageConfig.normalAttack](damageArgs)
    
    --计算冲击

    --填充伤害结果
    local damageResult = CS.DamageResults(XX,X,X,X,X,X,X,X)
    return damageResult
end

