1.实现常用的值类型，引用包装类（完成）
2.实现标签，将显示在编辑器的函数标记出来（完成）
3.Parameter的值类型在编辑器时期就改为RefValue引用类型
4.需要一个标记标签HasWrapFunc (完成)
5.需要一个转换脚本，将标记的函数中如果参数有值类型的创建一个副本函数，且给原函数打算新的标签 比如
[AbilityFuncCache]
func(int a,long b)
{
}

生成后
[HasWrapFunc("_Warp_Func")]
[AbilityFuncCache]
func(int a,long b){}

_Warp_Func(RefInt a,RefLong b)
{
//产生隐式转换，但是没有产生新的对象
    func(a,b);
}
